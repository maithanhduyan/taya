# ===============================
# THYMELEAF
# ===============================
spring.thymeleaf.cache=false

# ===============================
# DATASOURCE
# ===============================

# Set here configurations for the database connection
# Connection url for the database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://tayafood.com:5432/taya

# Postgresql username and password 
spring.datasource.username=tayadev
spring.datasource.password=123

# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults= false

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.dbcp.test-while-idles=true
#spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

entitymanager.packagesToScan= taya
# ===============================
# LOGGING
# ===============================
#Logging
logging.level.root=INFO
logging.file=logs/taya.log

